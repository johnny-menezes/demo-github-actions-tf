name: "Terraform-Plan-CI-CD"

on:
  pull_request:
    types: opened
    branches: prod
    
permissions:
      id-token: write      # This is required for aws oidc connection
      contents: read       # This is required for actions/checkout
      pull-requests: write # This is required for gh bot to comment PR
env:
  TF_LOG: INFO
  
jobs:
  Build-Terraform:
    runs-on: ubuntu-latest    
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform
          path: .

  Planning-Deployment-in-Prod:
    name: Planning Deployment in Prod
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./prod
    
    environment:
        name: prod
    
    needs: Build-Terraform
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform
          path: .

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 'latest'

      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=deploy_prod.tfplan
        if: github.event_name == 'pull_request'
        continue-on-error: true

